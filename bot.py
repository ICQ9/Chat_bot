import config
import telebot
import time
from telebot import types
from database import Database

from typing import final

db = Database('db.db')
bot = telebot.TeleBot(config.TOKEN)

#–†–∞—Å—Å—ã–ª–∫–∞
@bot.message_handler(commands=["spam"])
def spam(message):
    if (message.from_user.id == 345765593):
        user_mgs = message.text
        separating = user_mgs.split(maxsplit=1)
        users_spam= db.get_user()
        for i in users_spam:
            try:
                bot.send_message(i[1],separating[1])
            except:
                continue


@bot.message_handler(commands = ['check_all'])
def bot_message(message):
    if (message.from_user.id == 345765593):
       users = db.get_all_users()
    bot.send_message(message.chat.id, "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ª—é–¥–µ–π –∫–æ—Ç–æ—Ä—ã–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç —Ç–≤–æ–µ–≥–æ –±–æ—Ç–∞ = " + str(len(users)))

#–°—Å—ã–∫–∏
@bot.message_handler(commands=['website'])
def open_website(message):
    markup = types.InlineKeyboardMarkup()
    markup.add(types.InlineKeyboardButton("–í–æ—Ç —ç—Ç–æ –ø—Ä–∏–∫–æ–ª ^*^", url="https://www.youtube.com/watch?v=WACsPXKOOTU"))
    bot.send_message(message.chat.id, "–û—Ç–ª–∏—á–Ω—ã–π –≤—ã–±–æ—Ä, –ø—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ", parse_mode='html', reply_markup=markup)

@bot.message_handler(commands=['insta'])
def instagram(message):
    markup = types.InlineKeyboardMarkup()
    markup.add(types.InlineKeyboardButton("–ü–µ—Ä–µ–π—Ç–∏ –≤ –ò–Ω—Å—Ç–∞–≥—Ä–∞–º —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞", url="https://instagram.com/x_denk?utm_medium=copy_link"))
    bot.send_message(message.chat.id, "–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –∏ –ø–æ–¥–ø–∏—Å—ã–≤–∞–π—Ç–µ—Å—å ^_^", parse_mode='html', reply_markup=markup)
#------------------------------------------


def main_menu():
    markup = types.ReplyKeyboardMarkup(resize_keyboard = True)
    item1 = types.KeyboardButton('üë• –ü–æ–∏—Å–∫ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞')
    item2 = types.KeyboardButton('–°–º–µ–Ω–∏—Ç—å –ø–æ–ªüë©‚Äçüë®')
    markup.add(item1, item2)
    return markup

def stop_dialog():
    markup = types.ReplyKeyboardMarkup(resize_keyboard = True)
    item1 = types.KeyboardButton('üó£ –°–∫–∞–∑–∞—Ç—å —Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å')
    item2 = types.KeyboardButton('/stop')
    markup.add(item1, item2)
    return markup

def stop_search():
    markup = types.ReplyKeyboardMarkup(resize_keyboard = True)
    item1 = types.KeyboardButton('‚ùå –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–æ–∏—Å–∫')
    markup.add(item1)
    return markup

@bot.message_handler(commands = ['start'])
def start(message):
    bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç, {0.first_name}! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∞–Ω–æ–Ω–∏–º–Ω—ã–π —á–∞—Ç! –£–∫–∞–∂–∏—Ç–µ –≤–∞—à –ø–æ–ª! '.format(message.from_user), reply_markup = choose_gender(message))
#--------------------------------------------------
def choose_gender(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard = True)
    item1 = types.KeyboardButton('–Ø –ü–∞—Ä–µ–Ω—å üë®')
    item2 = types.KeyboardButton('–Ø –î–µ–≤—É—à–∫–∞ üë©‚Äçü¶±')
    markup.add(item1, item2)
    return markup
#--------------------------------------------------

@bot.message_handler(commands = ['menu'])
def menu(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard = True)
    item1 = types.KeyboardButton('üë• –ü–æ–∏—Å–∫ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞')
    item2 = types.KeyboardButton('–°–º–µ–Ω–∏—Ç—å –ø–æ–ªüë©‚Äçüë®')
    markup.add(item1, item2)

    bot.send_message(message.chat.id, 'üìù –ú–µ–Ω—é'.format(message.from_user), reply_markup = markup)

@bot.message_handler(commands = ['stop'])
def stop(message):
    chat_info = db.get_active_chat(message.chat.id)
    if chat_info != False:
        db.delete_chat(chat_info[0])
        markup = types.ReplyKeyboardMarkup(resize_keyboard = True)
        item1 = types.KeyboardButton('‚úèÔ∏è –°–ª–µ–¥—É—é—â–∏–π –¥–∏–∞–ª–æ–≥')
        item2 = types.KeyboardButton('/menu')
        markup.add(item1, item2)

        bot.send_message(chat_info[1], '‚ùå –°–æ–±–µ—Å–µ–¥–Ω–∏–∫ –ø–æ–∫–∏–Ω—É–ª —á–∞—Ç', reply_markup = markup)
        bot.send_message(message.chat.id, '‚ùå –í—ã –≤—ã—à–ª–∏ –∏–∑ —á–∞—Ç–∞', reply_markup = markup)
    else:
        bot.send_message(message.chat.id, '‚ùå –í—ã –Ω–µ –Ω–∞—á–∞–ª–∏ —á–∞—Ç!', reply_markup = markup)


@bot.message_handler(content_types = ['text'])
def bot_message(message):
    if message.chat.type == 'private':
        if message.text == 'üë• –ü–æ–∏—Å–∫ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞' or message.text == '‚úèÔ∏è –°–ª–µ–¥—É—é—â–∏–π –¥–∏–∞–ª–æ–≥':
            markup = types.ReplyKeyboardMarkup(resize_keyboard = True)
            item1 = types.KeyboardButton('üîé –ü–∞—Ä–µ–Ω—å')
            item2 = types.KeyboardButton('üîé –î–µ–≤—É—à–∫–∞')
            item3 = types.KeyboardButton('üë©‚Äçüë® –†–∞–Ω–¥–æ–º')
            markup.add(item1, item2, item3)

            bot.send_message(message.chat.id, '–ö–æ–≥–æ –∏—Å–∫–∞—Ç—å?', reply_markup = markup)
#-------------------------------------------------------------------------------
        elif message.text == '–°–º–µ–Ω–∏—Ç—å –ø–æ–ªüë©‚Äçüë®':
            bot.send_message(message.chat.id, 'üëç –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å —Å–≤–æ–π –ø–æ–ª', reply_markup = choose_gender(message))
#--------------------------------------------------------------------------------            
        elif message.text == '‚ùå –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–æ–∏—Å–∫':
            db.delete_queue(message.chat.id)
            bot.send_message(message.chat.id, '‚ùå –ü–æ–∏—Å–∫ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –Ω–∞–ø–∏—à–∏—Ç–µ /menu', reply_markup = main_menu())

        
        elif message.text == 'üîé –ü–∞—Ä–µ–Ω—å':
            user_info = db.get_gender_chat('male')
            chat_two = user_info[0]
            if db.create_chat(message.chat.id, chat_two) == False:
                db.add_queue(message.chat.id, db.get_gender(message.chat.id))
                bot.send_message(message.chat.id, 'üëª –ü–æ–∏—Å–∫ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞', reply_markup = stop_search())
            else:
                mess = '–°–æ–±–µ—Å–µ–¥–Ω–∏–∫ –Ω–∞–π–¥–µ–Ω! –ß—Ç–æ–±—ã –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –¥–∏–∞–ª–æ–≥, –Ω–∞–ø–∏—à–∏—Ç–µ /stop'

                bot.send_message(message.chat.id, mess, reply_markup = stop_dialog())
                bot.send_message(chat_two, mess, reply_markup = stop_dialog())
        
        
        elif message.text == 'üîé –î–µ–≤—É—à–∫–∞':
            user_info = db.get_gender_chat('female')
            chat_two = user_info[0]
            if db.create_chat(message.chat.id, chat_two) == False:
                db.add_queue(message.chat.id, db.get_gender(message.chat.id))
                bot.send_message(message.chat.id, 'üëª –ü–æ–∏—Å–∫ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞', reply_markup = stop_search())
            else:
                mess = '–°–æ–±–µ—Å–µ–¥–Ω–∏–∫ –Ω–∞–π–¥–µ–Ω! –ß—Ç–æ–±—ã –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –¥–∏–∞–ª–æ–≥, –Ω–∞–ø–∏—à–∏—Ç–µ /stop'

                bot.send_message(message.chat.id, mess, reply_markup = stop_dialog())
                bot.send_message(chat_two, mess, reply_markup = stop_dialog())
        

        elif message.text == 'üë©‚Äçüë® –†–∞–Ω–¥–æ–º':
            user_info = db.get_chat()
            chat_two = user_info[0]

            if db.create_chat(message.chat.id, chat_two) == False:
                db.add_queue(message.chat.id, db.get_gender(message.chat.id))
                bot.send_message(message.chat.id, 'üëª –ü–æ–∏—Å–∫ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞', reply_markup = stop_search())
            else:
                mess = '–°–æ–±–µ—Å–µ–¥–Ω–∏–∫ –Ω–∞–π–¥–µ–Ω! –ß—Ç–æ–±—ã –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –¥–∏–∞–ª–æ–≥, –Ω–∞–ø–∏—à–∏—Ç–µ /stop'

                bot.send_message(message.chat.id, mess, reply_markup = stop_dialog())
                bot.send_message(chat_two, mess, reply_markup = stop_dialog())
        
        elif message.text == 'üó£ –°–∫–∞–∑–∞—Ç—å —Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å':
            chat_info = db.get_active_chat(message.chat.id)
            if chat_info != False:
                if message.from_user.username:
                    bot.send_message(chat_info[1], '@' + message.from_user.username)
                    bot.send_message(message.chat.id, 'üó£ –í—ã —Å–∫–∞–∑–∞–ª–∏ —Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å')
                else:
                    bot.send_message(message.chat.id, '‚ùå –í –≤–∞—à–µ–º –∞–∫–∫–∞—É–Ω—Ç–µ –Ω–µ —É–∫–∞–∑–∞–Ω username')
            else:
                bot.send_message(message.chat.id, '‚ùå –í—ã –Ω–µ –Ω–∞—á–∞–ª–∏ –¥–∏–∞–ª–æ–≥!')

        

        elif message.text == '–Ø –ü–∞—Ä–µ–Ω—å üë®':
            if db.set_gender(message.chat.id, 'male'):
                bot.send_message(message.chat.id, '‚úÖ –í–∞—à –ø–æ–ª —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!', reply_markup = main_menu())
            else:
                bot.send_message(message.chat.id,'–í–∞—à –ø–æ–ª —É—Å–ø–µ—à–Ω–æ –≤—ã–±—Ä–∞–Ω üòã', reply_markup = main_menu())
        
        elif message.text == '–Ø –î–µ–≤—É—à–∫–∞ üë©‚Äçü¶±':
            if db.set_gender(message.chat.id, 'female'):
                bot.send_message(message.chat.id, '‚úÖ –í–∞—à –ø–æ–ª —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!', reply_markup = main_menu())
            else:
                bot.send_message(message.chat.id,'–í–∞—à –ø–æ–ª —É—Å–ø–µ—à–Ω–æ –≤—ã–±—Ä–∞–Ω üòã', reply_markup = main_menu())
        
        else:
            if db.get_active_chat(message.chat.id) != False:
                chat_info = db.get_active_chat(message.chat.id)
                bot.send_message(chat_info[1], message.text)
            else:
                bot.send_message(message.chat.id, '‚ùå –í—ã –Ω–µ –Ω–∞—á–∞–ª–∏ –¥–∏–∞–ª–æ–≥!')


@bot.message_handler(content_types='stickers')
def bot_stickers(message):
    if message.chat.type == 'private':
        chat_info = db.get_active_chat(message.chat.id)
        if chat_info != False:
            bot.send_sticker(chat_info[1], message.sticker.file_id)
        else:
            bot.send_message(message.chat.id, '‚ùå –í—ã –Ω–µ –Ω–∞—á–∞–ª–∏ –¥–∏–∞–ª–æ–≥!')

@bot.message_handler(content_types='voice')
def bot_voice(message):
    if message.chat.type == 'private':
        chat_info = db.get_active_chat(message.chat.id)
        if chat_info != False:
            bot.send_voice(chat_info[1], message.voice.file_id)
        else:
            bot.send_message(message.chat.id, '‚ùå –í—ã –Ω–µ –Ω–∞—á–∞–ª–∏ –¥–∏–∞–ª–æ–≥!')

@bot.message_handler(content_types='video')
def bot_video(message):
    if message.chat.type == 'private':
        chat_info = db.get_active_chat(message.chat.id)
        if chat_info != False:
            bot.send_video(chat_info[1], message.video.file_id)
        else:
            bot.send_message(message.chat.id, '‚ùå –í—ã –Ω–µ –Ω–∞—á–∞–ª–∏ –¥–∏–∞–ª–æ–≥!')

@bot.message_handler(content_types='video_note')
def bot_video_note(message):
    if message.chat.type == 'private':
        chat_info = db.get_active_chat(message.chat.id)
        if chat_info != False:
            bot.send_video_note(chat_info[1], message.video_note.file_id)
        else:
            bot.send_message(message.chat.id, '‚ùå –í—ã –Ω–µ –Ω–∞—á–∞–ª–∏ –¥–∏–∞–ª–æ–≥!')

@bot.message_handler(content_types='photo')
def bot_photo(message):
    if message.chat.type == 'private':
        chat_info = db.get_active_chat(message.chat.id)
        if chat_info != False:
            bot.send_photo(chat_info[1], message.photo[2].file_id)
        else:
            bot.send_message(message.chat.id, '‚ùå –í—ã –Ω–µ –Ω–∞—á–∞–ª–∏ –¥–∏–∞–ª–æ–≥!')



bot.polling(none_stop = True)